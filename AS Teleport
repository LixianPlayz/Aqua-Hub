-- LocalScript
-- Place inside StarterPlayer > StarterPlayerScripts

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local teleportEnabled = false
local teleportDelay = 3 -- seconds
local destroyed = false

local teleportPositions = {
	Vector3.new(-446, 643, 392),   -- updated coordinate
	Vector3.new(-340, 643, 842),
	Vector3.new(204, 663, 1439),
	Vector3.new(-53, 641, 202),
	Vector3.new(-193, 645, -238),
	Vector3.new(-744, 664, -303),
	Vector3.new(-10757, 641, -8972)
}

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TeleportToggleGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Create Button
local toggleButton = Instance.new("TextButton")
toggleButton.Name = "ToggleTeleport"
toggleButton.Size = UDim2.new(0, 80, 0, 40)
toggleButton.Position = UDim2.new(0, 10, 1, -50) -- bottom-left corner
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.TextSize = 20
toggleButton.Text = "OFF"
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.Parent = screenGui

-- Button click toggle
toggleButton.MouseButton1Click:Connect(function()
	if destroyed then return end
	teleportEnabled = not teleportEnabled
	toggleButton.Text = teleportEnabled and "ON" or "OFF"
end)

-- Teleport loop
task.spawn(function()
	while true do
		if destroyed then break end
		if teleportEnabled then
			for _, position in ipairs(teleportPositions) do
				if not teleportEnabled or destroyed then break end
				local character = player.Character or player.CharacterAdded:Wait()
				local hrp = character:WaitForChild("HumanoidRootPart")
				hrp.CFrame = CFrame.new(position)
				task.wait(teleportDelay)
			end
		else
			task.wait(0.5)
		end
	end
end)

-- Key combination detector (7+8+9+0)
local pressedKeys = {}

UserInputService.InputBegan:Connect(function(input, processed)
	if processed then return end
	if tonumber(input.KeyCode.Value) then
		pressedKeys[input.KeyCode] = true
	end

	if pressedKeys[Enum.KeyCode.Seven]
		and pressedKeys[Enum.KeyCode.Eight]
		and pressedKeys[Enum.KeyCode.Nine]
		and pressedKeys[Enum.KeyCode.Zero] then
		destroyed = true
		teleportEnabled = false
		screenGui:Destroy()
		print("Teleport GUI destroyed and function disabled.")
	end
end)

UserInputService.InputEnded:Connect(function(input)
	if tonumber(input.KeyCode.Value) then
		pressedKeys[input.KeyCode] = nil
	end
end)
